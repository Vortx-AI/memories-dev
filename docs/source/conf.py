# Configuration file for the Sphinx documentation builder.
import os
import sys
import platform
from packaging import version as packaging_version
import sphinx

sys.path.insert(0, os.path.abspath('../..'))

# Project information
project = 'memories-dev'
copyright = '2025, Memories-dev'
author = 'Memories-dev'
# The short X.Y version
version = '2.0.2'
# The full version, including alpha/beta/rc tags
release = '2.0.2'

# The master toctree document - ensure a single master document
master_doc = 'index'
root_doc = 'index'

# Only include the root document for PDF generation
latex_only_doc = 'index'

# Add any Sphinx extension module names here
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.napoleon',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    'sphinx_rtd_theme',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.ifconfig',
    'sphinx.ext.autosummary',
    'nbsphinx',
    'sphinx_copybutton',
    'myst_parser',
    'sphinxcontrib.mermaid',
    'sphinx_design',           # Enhanced UI components
    'sphinx_tabs.tabs',        # Tabbed content
    'sphinx_togglebutton',     # Toggle buttons
    'sphinx_favicon',          # Multiple favicons
    'sphinx.ext.duration',     # Build duration tracking
    'sphinx_sitemap',          # Sitemap generation
    'sphinx_last_updated_by_git', # Last updated date from git
]

# LaTeX configuration for PDF output
# Ensure only one PDF is generated by using a single root document
latex_documents = [
    (master_doc, 'memories-dev.tex', 'Memories-Dev Documentation',
     'Your Name', 'manual'),
]

# Disable other LaTeX targets
latex_additional_files = []
latex_domain_indices = False
latex_use_parts = False
latex_use_modindex = False

# LaTeX elements configuration - simplified for better compatibility
latex_elements = {
    # Remove all font packages that might cause conflicts
    'fontpkg': '',
    # Use basic article class
    'papersize': 'letterpaper',
    'pointsize': '10pt',
    # Simplify preamble
    'preamble': '',
    # Use a simple title page
    'maketitle': '\\maketitle',
    # No raw format for now
    'raw_watch_conflict': False,
    # No figure conversion
    'figure_align': 'htbp',
    # Disable mermaid diagrams
    'usepackage_tikz': False,
    # Don't include hyperref
    'hyperref': '',
    # Don't handle math specially
    'sphinxsetup': 'verbatimwithframe=false',
    # Use basic article layout
    'fncychap': '',
    # Simplify packages
    'passoptionstopackages': '\\PassOptionsToPackage{draft}{graphicx}',
}

# If true, show page references after internal links
latex_show_pagerefs = False

# If true, show URL addresses after external links
latex_show_urls = 'footnote'

# Documents to append as an appendix to all manuals
latex_appendices = []

# Only generate one PDF for the entire documentation
latex_domain_indices = False

# -- Options for manual page output ---------------------------------------

# One entry per manual page
man_pages = [
    (master_doc, 'memories-dev', 'Memories-Dev Documentation',
     [author], 1)
]

# If true, show URL addresses after external links
man_show_urls = True

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files
texinfo_documents = [
    (master_doc, 'memories-dev', 'Memories-Dev Documentation',
     author, 'memories-dev', 'Collective Memory Infrastructure for AGI.',
     'Miscellaneous'),
]

# Documents to append as an appendix to all manuals
texinfo_appendices = []

# If false, no module index is generated
texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'
texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu
texinfo_no_detailmenu = False

# Handle type hints based on Python version
python_version = packaging_version.parse(platform.python_version())
sphinx_version = packaging_version.parse(sphinx.__version__)

# Configure type hints based on Python version
if python_version >= packaging_version.parse('3.13'):
    autodoc_typehints = 'none'  # Disable automatic type hints processing
    autodoc_typehints_format = 'fully-qualified'
    napoleon_use_param = True
    napoleon_use_rtype = True
    napoleon_preprocess_types = True
    napoleon_type_aliases = None
elif python_version >= packaging_version.parse('3.12'):
    extensions.append('sphinx_autodoc_typehints')
    autodoc_typehints = 'description'
    autodoc_typehints_format = 'short'
    autodoc_type_aliases = {}
else:
    autodoc_typehints = 'none'

# Add any paths that contain templates here
templates_path = ['_templates']

# These paths are either relative to html_static_path or fully qualified paths (eg. https://...)
html_css_files = [
    'custom.css',
    'code-highlight.css',
    'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap',
]

html_js_files = [
    'https://buttons.github.io/buttons.js',
    'custom.js',
    'theme_toggle.js',
    'search_enhancer.js',
    'nav_enhancer.js',
]

# The suffix of source filenames
source_suffix = {
    '.rst': 'restructuredtext',
    '.md': 'markdown',
}

# List of patterns to exclude
exclude_patterns = [
    '_build',
    'Thumbs.db',
    '.DS_Store',
    '**.ipynb_checkpoints',
    'env',
    'venv',
]

# The theme to use for HTML and HTML Help pages
html_theme = 'sphinx_rtd_theme'

# Add any paths that contain custom static files
html_static_path = ['_static']

# Theme options
html_theme_options = {
    'logo_only': False,
    'display_version': True,
    'prev_next_buttons_location': 'both',
    'style_external_links': True,
    'style_nav_header_background': '#1a1a1a',  # Professional dark background
    'collapse_navigation': False,
    'sticky_navigation': True,
    'navigation_depth': 4,
    'includehidden': True,
    'titles_only': False,
    'body_max_width': '1200px',
    'navigation_with_keys': True,
}

# Base URL for the docs
html_baseurl = 'https://memories-dev.readthedocs.io/'

# HTML context
html_context = {
    'display_github': True,
    'github_user': 'Vortx-AI',
    'github_repo': 'memories-dev',
    'github_version': 'main',
    'conf_py_path': '/docs/source/',
}

# Matrix theme title
html_title = "Memories-Dev Documentation"

# Matrix theme favicon
html_favicon = '_static/images/favicon.ico'

# Matrix theme logo
html_logo = '_static/images/logo.png'

# Mermaid configuration
mermaid_output_format = 'png'
mermaid_params = ['--theme', 'default', '--width', '100%']

# MyST settings
myst_enable_extensions = [
    'amsmath',
    'colon_fence',
    'deflist',
    'dollarmath',
    'html_admonition',
    'html_image',
    'replacements',
    'smartquotes',
    'substitution',
    'tasklist',
]

# Add any extra paths that contain custom files
html_extra_path = ['robots.txt']

# Output file base name for HTML help builder
htmlhelp_basename = 'memories-dev-doc'

# Sitemap configuration
sitemap_url_scheme = "{link}"
sitemap_filename = "sitemap.xml"

# Last updated configuration
html_last_updated_fmt = "%b %d, %Y"

# Search configuration
search_language = "en"

# Mock imports for documentation build
autodoc_mock_imports = [
    "numpy", "pandas", "matplotlib", "PIL", "requests", "yaml",
    "dotenv", "tqdm", "pyarrow", "nltk", "langchain", "pydantic",
    "shapely", "geopandas", "rasterio", "pyproj", "pystac",
    "mercantile", "folium", "rtree", "geopy", "osmnx", "py6s",
    "redis", "xarray", "dask", "aiohttp", "memories",
    "cudf", "cuspatial", "faiss", "torch", "transformers"
]

# Intersphinx configuration
intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'numpy': ('https://numpy.org/doc/stable/', None),
    'pandas': ('https://pandas.pydata.org/docs/', None),
    'matplotlib': ('https://matplotlib.org/stable/', None),
}

# Disable certain extensions for latex build
def setup(app):
    app.connect('builder-inited', lambda app: app.builder.name == 'latex' and 
                app.config.extensions.pop(app.config.extensions.index('sphinx.ext.autodoc'), None))
    app.connect('builder-inited', lambda app: app.builder.name == 'latex' and 
                app.config.extensions.pop(app.config.extensions.index('sphinxcontrib.mermaid'), None) 
                if 'sphinxcontrib.mermaid' in app.config.extensions else None) 