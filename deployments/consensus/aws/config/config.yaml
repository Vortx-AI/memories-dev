version: '1.0'

# AWS Consensus Deployment Configuration
deployment:
  type: consensus
  provider: aws

# Cluster Configuration
cluster:
  size: 3
  min_size: 3
  max_size: 5
  auto_scaling:
    enabled: true
    metrics:
      - cpu_utilization
      - memory_utilization

# Memory Management
memory:
  shared_memory:
    type: distributed
    implementation: "redis-cluster"
    total_capacity: "2TB"
    
    partitioning:
      strategy: "consistent-hashing"
      virtual_nodes: 256
      replication_factor: 3
    
    synchronization:
      protocol: "raft"
      sync_interval: "50ms"
      batch_size: 1000
    
    optimization:
      compression: "lz4"
      eviction_policy: "lru"
      prefetch: enabled
      
  gpu_memory:
    nvlink_config:
      enabled: true
      topology: "fully-connected"
      bandwidth: "600GB/s"
      p2p_transfers: enabled
      
    unified_memory:
      enabled: true
      page_size: "2MB"
      prefetch_policy: "adaptive"
    
    memory_pools:
      enabled: true
      types:
        - name: "fast"
          size: "80%"
          location: "device"
        - name: "shared"
          size: "20%"
          location: "unified"

# Inter-Server Communication
communication:
  protocol: grpc
  tls:
    enabled: true
    mutual: true
  ports:
    consensus: 9000
    metrics: 9100

# Consensus Protocol
consensus:
  algorithm: raft
  quorum_size: 2
  election_timeout: 1000ms
  heartbeat_interval: 100ms

# State Management
state:
  persistence:
    type: ebs
    size: 100Gi
    iops: 3000
  replication:
    factor: 3
    sync: true

# Network Configuration
networking:
  vpc:
    cidr: 10.0.0.0/16
    subnets:
      private: true
      public: true
  
  transit_gateway:
    enabled: true
    regions:
      - us-west-2
      - us-east-1
      - eu-west-1
  
  accelerated_networking:
    enabled: true
    types:
      - efa
      - rdma
      - nvlink
    
  placement_groups:
    strategy: cluster
    partition_count: 3

# Performance Optimization
performance:
  gpu_clusters:
    enabled: true
    topology: "nvlink-mesh"
    scheduling:
      gpu_affinity: true
      numa_aware: true
    
  memory_optimization:
    numa_balancing: enabled
    transparent_hugepages: "always"
    swappiness: 0
    
  network_optimization:
    jumbo_frames: enabled
    tcp_bbr: enabled
    rdma_cm: enabled
    
  workload_placement:
    strategy: "topology-aware"
    constraints:
      - "gpu-locality"
      - "memory-locality"
      - "network-locality"

# Monitoring Configuration
monitoring:
  enabled: true
  metrics:
    - name: "CPUUtilization"
      period: 300
      threshold:
        warning: 80
        critical: 90
    - name: "MemoryUtilization"
      period: 300
      threshold:
        warning: 80
        critical: 90
  cloud_monitoring:
    enabled: true
    metrics:
      collection_interval: 30s
      retention_days: 90
      types:
        - name: "instance.cpu"
          namespace: "compute"
        - name: "instance.memory"
          namespace: "compute"
  azure_monitor:
    enabled: true
    metrics:
      - name: "Percentage CPU"
        aggregation: Average
        interval: PT5M
      - name: "Available Memory Bytes"
        aggregation: Average
        interval: PT5M
  cloudwatch:
    enabled: true
    metrics:
      - name: cpu_utilization
        namespace: AWS/EC2
        period: 300
        statistic: Average
      - name: memory_utilization
        namespace: Custom/Memory
        period: 300
        statistic: Average

# Alerts
alerts:
  - name: "high_memory_pressure"
    condition: "memory_usage > 85%"
    duration: "5m"
  - name: "nvlink_saturation"
    condition: "nvlink_bandwidth > 90%"
    duration: "5m"

# Resource Management
resource_management:
  gpu_partitioning:
    enabled: true
    strategy: "mps"
    
  memory_limits:
    per_node: "768GB"
    per_pod: "64GB"
    
  network_qos:
    enabled: true
    classes:
      - name: "consensus"
        priority: "high"
      - name: "replication"
        priority: "medium"

# Security
security:
  iam:
    service_accounts: true
    roles:
      - name: consensus-leader
        policies:
          - AWSLoadBalancerControllerIAMPolicy
          - AWSEBSCSIDriverPolicy
      - name: consensus-follower
        policies:
          - AWSEBSCSIDriverPolicy
  kms:
    enabled: true
    multi_region: true
    key_rotation: true
  network_policies:
    enabled: true
    default_deny: true
    allow_namespaces:
      - kube-system
      - monitoring
  authentication:
    enabled: true
    type: "iam"
    methods:
      - "password"
      - "key-based"
    mfa: true
    session_duration: 3600
  network_security_groups:
    enabled: true
    rules:
      - name: "allow-consensus"
        priority: 100
        direction: "inbound"
        access: "allow"
        protocol: "tcp"
        source_port_range: "*"
        destination_port_range: "26656-26657"
        source_address_prefix: "*"
        destination_address_prefix: "*"
      - name: "allow-ssh"
        priority: 200
        direction: "inbound"
        access: "allow"
        protocol: "tcp"
        source_port_range: "*"
        destination_port_range: "22"
        source_address_prefix: "*"
        destination_address_prefix: "*"
  encryption:
    at_rest:
      enabled: true
      type: "aws-kms"
      key_rotation: true
    in_transit:
      enabled: true
      type: "tls"
      minimum_version: "1.2"
  vnet:
    enabled: true
    address_space: ["10.0.0.0/16"]
    subnets:
      - name: "consensus"
        address_prefix: "10.0.1.0/24"
        security_group: "consensus-sg"

# Service Mesh
service_mesh:
  type: istio
  version: "1.13"
  mtls:
    enabled: true
    mode: STRICT
  
  traffic_management:
    locality_lb:
      enabled: true
      fail_over:
        - from: us-west-2
          to: us-east-1
        - from: us-east-1
          to: eu-west-1

# Logging
logging:
  cloudwatch:
    enabled: true
    retention: 30
    log_groups:
      - consensus-application
      - consensus-audit
  
  opensearch:
    enabled: true
    domain: consensus-logs
    retention: 90d

# Backup and Recovery
backup:
  velero:
    enabled: true
    schedule: "0 */4 * * *"
    retention: 30d
    include_volumes: true
  
  cross_region:
    enabled: true
    destination_regions:
      - us-east-1
      - eu-west-1

# Maintenance
maintenance:
  updates:
    strategy: rolling
    max_unavailable: 1
    schedule: "0 0 * * 0"
  
  health_checks:
    enabled: true
    probes:
      liveness:
        initial_delay: 30
        period: 10
      readiness:
        initial_delay: 20
        period: 5

deployment_type: consensus
provider: aws

infrastructure:
  instance_type: t3.xlarge
  machine_type: t3.xlarge
  vm_size: t3.xlarge
  ami_id: ami-0c55b159cbfafe1f0
  image:
    id: ami-0c55b159cbfafe1f0
    name: ubuntu-20.04
  region: us-east-1
  availability_zones:
    - us-east-1a
    - us-east-1b
  zones:
    - us-east-1a
    - us-east-1b
  subnet_type: private
  availability: multi-az

security:
  vpc:
    enabled: true
    cidr: 10.0.0.0/16
  security_groups:
    - name: consensus-nodes
      description: Security group for consensus nodes
      rules:
        - protocol: tcp
          from_port: 22
          to_port: 22
          cidr: 10.0.0.0/16
        - protocol: tcp
          from_port: 9000
          to_port: 9000
          cidr: 10.0.0.0/16

backup:
  enabled: true
  retention_days: 30
  schedule: 0 0 * * *
  type: snapshot 