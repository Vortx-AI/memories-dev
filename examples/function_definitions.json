{
    "location_functions": [
        {
            "type": "function",
            "function": {
                "name": "get_bounding_box",
                "description": "Convert a text address into a geographic bounding box. Returns coordinates that define the area's boundaries, useful for subsequent spatial queries.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Text address to convert to geographic coordinates"
                        }
                    },
                    "required": ["address"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_bounding_box_from_coords",
                "description": "Convert a point location (latitude/longitude) into a geographic bounding box. Returns coordinates that define the area's boundaries, useful for subsequent spatial queries.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "description": "Latitude of the location (-90 to 90)"
                        },
                        "lon": {
                            "type": "number",
                            "description": "Longitude of the location (-180 to 180)"
                        }
                    },
                    "required": ["lat", "lon"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_address_from_coords",
                "description": "Get address details from coordinates using reverse geocoding that is from the co ordinates",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "description": "Latitude of the location"
                        },
                        "lon": {
                            "type": "number",
                            "description": "Longitude of the location"
                        }
                    },
                    "required": ["lat", "lon"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_coords_from_address",
                "description": "Get coordinates from an address using forward geocoding",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Address to geocode"
                        }
                    },
                    "required": ["address"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_data_by_bbox",
                "description": "Find all geographic features such as parks, buildings, roads, and other features within a specified area.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "min_lon": {
                            "type": "number",
                            "description": "Western boundary longitude"
                        },
                        "min_lat": {
                            "type": "number",
                            "description": "Southern boundary latitude"
                        },
                        "max_lon": {
                            "type": "number",
                            "description": "Eastern boundary longitude"
                        },
                        "max_lat": {
                            "type": "number",
                            "description": "Northern boundary latitude"
                        },
                        "lon_column": {
                            "type": "string",
                            "description": "Name of the longitude column in the data tables",
                            "default": "longitude"
                        },
                        "lat_column": {
                            "type": "string",
                            "description": "Name of the latitude column in the data tables",
                            "default": "latitude"
                        },
                        "geom_column": {
                            "type": "string",
                            "description": "Name of the geometry column for spatial data",
                            "default": "geometry"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "Maximum number of features to return",
                            "default": 1000
                        }
                    },
                    "required": ["min_lon", "min_lat", "max_lon", "max_lat"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_data_by_bbox_and_value",
                "description": "Find specific types of geographic features within an area. Useful for queries like 'find parks near X' or 'find restaurants in Y area'. Combines spatial search with feature type filtering.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "min_lon": {
                            "type": "number",
                            "description": "Western boundary longitude"
                        },
                        "min_lat": {
                            "type": "number",
                            "description": "Southern boundary latitude"
                        },
                        "max_lon": {
                            "type": "number",
                            "description": "Eastern boundary longitude"
                        },
                        "max_lat": {
                            "type": "number",
                            "description": "Northern boundary latitude"
                        },
                        "search_value": {
                            "type": "string",
                            "description": "Type of feature to find (e.g., 'park', 'building', 'road', 'restaurant')"
                        },
                        "case_sensitive": {
                            "type": "boolean",
                            "description": "Whether to perform case-sensitive search",
                            "default": false
                        },
                        "lon_column": {
                            "type": "string",
                            "description": "Name of the longitude column in the data tables",
                            "default": "longitude"
                        },
                        "lat_column": {
                            "type": "string",
                            "description": "Name of the latitude column in the data tables",
                            "default": "latitude"
                        },
                        "geom_column": {
                            "type": "string",
                            "description": "Name of the geometry column for spatial data",
                            "default": "geometry"
                        },
                        "limit": {
                            "type": "integer",
                            "description": "Maximum number of features to return",
                            "default": 1000
                        }
                    },
                    "required": ["min_lon", "min_lat", "max_lon", "max_lat", "search_value"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_data_by_fuzzy_search",
                "description": "Search for data across all columns using fuzzy string matching to find the most similar matches",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "search_term": {
                            "type": "string",
                            "description": "Term to search for across all columns"
                        },
                        "similarity_threshold": {
                            "type": "number",
                            "description": "Minimum similarity score (0-1) for matches",
                            "default": 0.3
                        },
                        "case_sensitive": {
                            "type": "boolean",
                            "description": "Whether to perform case-sensitive search",
                            "default": false
                        },
                        "limit": {
                            "type": "integer",
                            "description": "Maximum number of results to return",
                            "default": 10
                        }
                    },
                    "required": ["search_term"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "execute_code",
                "description": "Execute custom Python code. The code can use pandas (pd) and numpy (np). You can create and execute custom functions to analyze data.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "Python code to execute. Can include function definitions and data analysis."
                        },
                        "data": {
                            "type": "object",
                            "description": "Optional dictionary containing data to be used by the code",
                            "additionalProperties": true
                        }
                    },
                    "required": ["code"]
                }
            }
        }
    ]
} 