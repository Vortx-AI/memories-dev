{
    "location_functions": [
        {
            "type": "function",
            "function": {
                "name": "get_bounding_box",
                "description": "Convert a text address into a geographic bounding box. Returns coordinates that define the area's boundaries, useful for subsequent spatial queries.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Text address to convert to geographic coordinates"
                        }
                    },
                    "required": ["address"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "expand_bbox_with_radius",
                "description": "Expands a bounding box by a specified radius, or creates a bounding box around a point with given radius. Perfect for finding locations 'near', 'around', or 'within' a certain distance of a point or area. For example, finding all buildings within 5km of a location, or expanding a neighborhood's bounds by 2km to include nearby areas. The radius is applied in all directions.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "input_type": {
                            "type": "string",
                            "description": "Type of input - either 'coordinates' or 'bbox'",
                            "enum": ["coordinates", "bbox"]
                        },
                        "coordinates": {
                            "type": "object",
                            "description": "Point coordinates (required if input_type is 'coordinates')",
                            "properties": {
                                "lat": {
                                    "type": "number",
                                    "description": "Latitude of the point (-90 to 90)"
                                },
                                "lon": {
                                    "type": "number",
                                    "description": "Longitude of the point (-180 to 180)"
                                }
                            },
                            "required": ["lat", "lon"]
                        },
                        "bbox": {
                            "type": "object",
                            "description": "Bounding box (required if input_type is 'bbox')",
                            "properties": {
                                "xmin": {
                                    "type": "number",
                                    "description": "Minimum longitude (-180 to 180)"
                                },
                                "ymin": {
                                    "type": "number",
                                    "description": "Minimum latitude (-90 to 90)"
                                },
                                "xmax": {
                                    "type": "number",
                                    "description": "Maximum longitude (-180 to 180)"
                                },
                                "ymax": {
                                    "type": "number",
                                    "description": "Maximum latitude (-90 to 90)"
                                }
                            },
                            "required": ["xmin", "ymin", "xmax", "ymax"]
                        },
                        "radius_km": {
                            "type": "number",
                            "description": "Radius in kilometers to expand the bounding box or create box around point",
                            "minimum": 0.1,
                            "maximum": 1000
                        },
                        "return_format": {
                            "type": "string",
                            "description": "Format of the returned bounding box",
                            "enum": ["bbox", "geojson"],
                            "default": "bbox"
                        }
                    },
                    "required": ["input_type", "radius_km"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_bounding_box_from_coords",
                "description": "Convert a point location (latitude/longitude) into a geographic bounding box. Returns coordinates that define the area's boundaries, useful for subsequent spatial queries.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "description": "Latitude of the location (-90 to 90)"
                        },
                        "lon": {
                            "type": "number",
                            "description": "Longitude of the location (-180 to 180)"
                        }
                    },
                    "required": ["lat", "lon"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_address_from_coords",
                "description": "Get address details from coordinates using reverse geocoding that is from the co ordinates",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "lat": {
                            "type": "number",
                            "description": "Latitude of the location"
                        },
                        "lon": {
                            "type": "number",
                            "description": "Longitude of the location"
                        }
                    },
                    "required": ["lat", "lon"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "get_coords_from_address",
                "description": "Get coordinates from an address using forward geocoding",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string",
                            "description": "Address to geocode"
                        }
                    },
                    "required": ["address"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "search_geospatial_data_in_bbox",
                "description": "Search for geospatial features (like roads, buildings, landuse, etc.) within a geographic bounding box. Uses semantic search to find relevant data based on the query word.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query_word": {
                            "type": "string",
                            "description": "Search term (e.g., 'road', 'building', 'park', 'landuse', 'water')"
                        },
                        "bbox": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 4,
                            "maxItems": 4,
                            "description": "Geographic bounding box as [min_lon, min_lat, max_lon, max_lat]"
                        },
                        "similarity_threshold": {
                            "type": "number",
                            "description": "Minimum semantic similarity score (0-1) for matching columns",
                            "default": 0.5,
                            "minimum": 0,
                            "maximum": 1
                        }
                    },
                    "required": ["query_word", "bbox"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "execute_code",
                "description": "Execute custom Python code. The code can use pandas (pd) and numpy (np). You can create and execute custom functions to analyze data.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "string",
                            "description": "Python code to execute. Can include function definitions and data analysis."
                        },
                        "data": {
                            "type": "object",
                            "description": "Optional dictionary containing data to be used by the code",
                            "additionalProperties": true
                        }
                    },
                    "required": ["code"]
                }
            }
        },
        {
            "type": "function",
            "function": {
                "name": "analyze_geospatial_data",
                "description": "Analyze geospatial features within a bounding box based on specified action",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "query_word": {
                            "type": "string",
                            "description": "Search term (e.g., 'road', 'building', 'park', 'landuse', 'water',etc)"
                        },
                        "bbox": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 4,
                            "maxItems": 4,
                            "description": "Geographic bounding box as [min_lon, min_lat, max_lon, max_lat]"
                        },
                        "analysis_action": {
                            "type": "string",
                            "enum": ["summary", "count", "names", "types", "density", "stats", "categories", "all"],
                            "description": "Type of analysis to perform",
                            "default": "summary"
                        },
                        "similarity_threshold": {
                            "type": "number",
                            "minimum": 0.3,
                            "maximum": 1.0,
                            "description": "Minimum similarity threshold for matching columns",
                            "default": 0.7
                        },
                        "max_tokens": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Maximum number of tokens allowed in the output",
                            "default": 15000
                        }
                    },
                    "required": ["query_word", "bbox"]
                },
                "returns": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string",
                            "enum": ["success", "error", "no_data"],
                            "description": "Status of the analysis"
                        },
                        "summary": {
                            "type": "object",
                            "description": "General summary statistics (when action is 'summary' or 'all')"
                        },
                        "count": {
                            "type": "object",
                            "description": "Feature count statistics (when action is 'count' or 'all')"
                        },
                        "names": {
                            "type": "object",
                            "description": "Feature names analysis (when action is 'names' or 'all')"
                        },
                        "types": {
                            "type": "object",
                            "description": "Feature types distribution (when action is 'types' or 'all')"
                        },
                        "density": {
                            "type": "object",
                            "description": "Feature density analysis (when action is 'density' or 'all')"
                        },
                        "stats": {
                            "type": "object",
                            "description": "Statistical analysis of numeric columns (when action is 'stats' or 'all')"
                        },
                        "categories": {
                            "type": "object",
                            "description": "Distribution of categorical values (when action is 'categories' or 'all')"
                        },
                        "message": {
                            "type": "string",
                            "description": "Error or status message when applicable"
                        }
                    },
                    "required": ["status"]
                }
            }
        }
    ]
} 