[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "memories-dev"
version = "1.1.5"
description = "A Python package for managing and processing earth observation data"
readme = "README.md"
requires-python = ">=3.9,<3.14.0"
license = {file = "LICENSE"}
keywords = ["earth observation", "data processing", "memory management"]
authors = [
    {name = "Memories-dev", email = "hello@memories.dev"}
]
maintainers = [
    {name = "Memories-dev", email = "hello@memories.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Intended Audience :: Science/Research"
]

dependencies = [
    "torch>=2.2.0",
    "transformers>=4.30.0",
    "pillow>=10.0.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "python-dotenv>=1.0.0",
    "tqdm>=4.65.0",
    "pyarrow>=14.0.1",
    "mercantile>=1.2.1",
    "mapbox-vector-tile>=2.0.1",
    "pyproj>=3.6.1",
    "pystac>=1.8.0",
    "redis>=5.0.0",
    "nltk>=3.8.1",
    "diffusers>=0.25.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.1",
    "duckdb>=0.9.0",
    "shapely>=2.0.0",
    "geopy>=2.3.0",
    "aiohttp>=3.9.0",
    "fsspec>=2024.2.0",
    "cryptography>=42.0.0",
    "pyjwt>=2.8.0",
    "concurrent-futures>=3.0.5",
    "pystac-client>=1.0.0",
    "planetary-computer>=1.0.0",
    "fastapi>=0.109.0",
    "netCDF4>=1.6.5",
    "earthengine-api>=0.1.390",
    "sentinelhub>=3.9.0",
    "typing-extensions>=4.9.0",
    "pydantic>=2.6.0",
    "uvicorn>=0.27.0",
    "python-multipart>=0.0.9",
    "landsatxplore>=0.13.0",
    "sentinelsat>=1.3.0",
    "osmnx>=1.9.0",
    "py6s>=1.9.0",
    "opencv-python>=4.8.0"
]

[project.optional-dependencies]
py39 = [
    "numpy>=1.24.4,<2.0.0",
    "pandas>=2.0.0,<2.1.0",
    "matplotlib>=3.7.0,<3.8.0",
    "ipywidgets>=8.0.0",
    "scikit-learn>=1.3.0,<1.4.0",
    "rasterio>=1.3.8",
    "geopandas>=0.14.0",
    "albumentations>=1.3.1,<1.4.0",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "xarray>=2023.0.0",
    "dask>=2024.1.0",
    "accelerate>=1.3.0,<1.4.0",
    "scipy>=1.11.0",
    "noise>=1.2.2",
    "torch-scatter>=2.1.2",
    "torch-sparse>=0.6.18",
    "torch-cluster>=1.6.3",
    "torch-geometric>=2.4.0"
]

py310 = [
    "numpy>=1.24.4,<2.0.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "ipywidgets>=8.0.0",
    "scikit-learn>=1.3.0",
    "rasterio>=1.3.8",
    "geopandas>=0.14.0",
    "albumentations>=1.3.1",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "xarray>=2023.0.0",
    "dask>=2024.1.0",
    "accelerate>=1.3.0",
    "scipy>=1.11.0",
    "noise>=1.2.2",
    "torch-scatter>=2.1.2",
    "torch-sparse>=0.6.18",
    "torch-cluster>=1.6.3",
    "torch-geometric>=2.4.0"
]

py311 = [
    "numpy>=1.24.4,<2.0.0",
    "pandas>=2.0.0",
    "matplotlib>=3.7.0",
    "ipywidgets>=8.0.0",
    "scikit-learn>=1.3.0",
    "rasterio>=1.3.8",
    "geopandas>=0.14.0",
    "albumentations>=1.3.1",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "xarray>=2023.0.0",
    "dask>=2024.1.0",
    "accelerate>=1.3.0",
    "scipy>=1.11.0",
    "noise>=1.2.2",
    "torch-scatter>=2.1.2",
    "torch-sparse>=0.6.18",
    "torch-cluster>=1.6.3",
    "torch-geometric>=2.4.0"
]

py312 = [
    "numpy>=1.26.0,<1.27.0",
    "pandas>=2.1.0,<2.2.0",
    "matplotlib>=3.8.0",
    "ipywidgets>=8.0.0",
    "scikit-learn>=1.3.0",
    "rasterio>=1.3.8",
    "geopandas>=0.14.0",
    "albumentations>=1.3.1",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "xarray>=2023.0.0",
    "dask>=2024.1.0",
    "accelerate>=1.3.0",
    "scipy>=1.12.0",
    "noise>=1.2.2",
    "torch-scatter>=2.1.2",
    "torch-sparse>=0.6.18",
    "torch-cluster>=1.6.3",
    "torch-geometric>=2.4.0"
]

py313 = [
    "numpy>=1.26.0,<2.0.0",
    "pandas>=2.2.0",
    "matplotlib>=3.8.0",
    "ipywidgets>=8.0.0",
    "scikit-learn>=1.3.0",
    "rasterio>=1.3.8",
    "geopandas>=0.14.0",
    "albumentations>=1.3.1",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.0",
    "xarray>=2023.0.0",
    "dask>=2024.1.0",
    "accelerate>=1.3.0",
    "scipy>=1.12.0",
    "noise>=1.2.2",
    "torch-scatter>=2.1.2",
    "torch-sparse>=0.6.18",
    "torch-cluster>=1.6.3",
    "torch-geometric>=2.4.0"
]

# GPU support
gpu = [
    "faiss-gpu>=1.7.4",
    "cupy-cuda12x>=12.0.0",
    "cudf>=24.2.0",
    "cuspatial>=24.2.0",
    "torch>=2.2.0+cu118",
    "torchvision>=0.17.0+cu118",
    "torchaudio>=2.2.0+cu118",
    "torch-scatter>=2.1.2+cu118",
    "torch-sparse>=0.6.18+cu118",
    "torch-cluster>=1.6.3+cu118",
    "torch-geometric>=2.4.0+cu118"
]

# Development tools
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.2.0",
    "black>=24.1.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "isort>=5.13.0",
    "pre-commit>=3.6.0"
]

# Documentation tools
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=2.0.0",
    "nbsphinx>=0.9.0",
    "pandoc>=2.3"
]

[project.urls]
Homepage = "https://memories.dev"
Documentation = "https://docs.memories.dev"
Repository = "https://github.com/Vortx-AI/memories-dev.git"
Issues = "https://github.com/Vortx-AI/memories-dev/issues"
Changelog = "https://github.com/Vortx-AI/memories-dev/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["memories"]
package-dir = {"memories" = "memories"}

[tool.setuptools.package-data]
memories = [
    "config/*.yaml",
    "data/*.json",
    "models/config/*.json",
    "utils/styles/*.json"
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.3"
addopts = "-ra -q --cov=memories"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = ["asyncio: mark test as async"] 